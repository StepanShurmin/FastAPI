version: '3.8'
services:
  db:
    image: postgres:15
    container_name: booking_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - 5433:5432

  redis:
    image: redis:7
    container_name: booking_redis
#    ports:
#      - 6379:6379

  booking:
    image: booking_app
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: sh -c "/booking/docker/app.sh"
#    command: ["/booking/docker/app.sh"]
#    command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 7777:8000

  celery:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery
    command: sh -c "/booking/docker/celery.sh celery"
    #    command: ["/booking/docker/celery.sh", "celery"]
#    command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO"
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  flower:
    image: booking_flower
    build:
      context: .
    container_name: booking_flower
    command: sh -c "/booking/docker/celery.sh flower"
#    command: ["/booking/docker/celery.sh", "flower"]
#    command: sh -c "celery --app=app.tasks.celery:celery flower"
    env_file:
      - .env-non-dev
    depends_on:
      - redis
    ports:
      - 5555:5555

  prometheus:
      image: prom/prometheus:v2.43.0
      container_name: prometheus
      volumes:
#        - /Users/stepan/PycharmProjects/FastAPI/prometheus.yaml:/etc/prometheus/prometheus.yml
        - ./prometheus.yaml:/etc/prometheus/prometheus.yml
        - prometheusdata:/prometheus
      restart: unless-stopped
      ports:
        - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:
  postgresdata:
  grafanadata:
  prometheusdata: